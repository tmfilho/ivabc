from __future__ import division

import numpy as np
from scipy.io import loadmat


def get_interval(data, b, alpha=0.05):
    means = [np.mean(np.random.choice(data, len(data))) for i in np.arange(b)]
    means.sort()
    minimum = means[int(np.round(b * alpha / 2))]
    maximum = means[int(np.round(b * (1.0 - alpha / 2)))]
    return (minimum + maximum) / 2, (maximum - minimum) / 2


def print_intervals(data, labels, b, alpha=0.05):
    print "\\begin{tikzpicture}"
    print "     \\begin{axis}["
    print "          width=3in,"
    print "          height=2in,"
    print "          scale only axis,"
    print "          ylabel =$\\text{erro}$,"
    print "          xtick distance=1,"

    labels_str = "xticklabels={"
    indices = ""
    for i, label in enumerate(labels):
        labels_str += label
        indices += "{}".format(i + 1)
        if i < (len(labels) - 1):
            labels_str += ","
            indices += ","
    labels_str += "},xtick={" + indices + "}"

    print "         " + labels_str
    print "     ]"
    print "     \\addplot["
    print "          smooth,"
    print "          mark=x,"
    print "          only marks,"
    print "          blue,"
    print "          error bars/.cd, y dir=both, y explicit,"
    print "     ] plot coordinates {"
    for i, d in enumerate(data):
        avg, r = get_interval(d, b, alpha=alpha)
        print "          ({},{})+=(0,{})-=(0,{})".format(i + 1, avg, r, r)
    print "     };"
    print "     \end{axis}"
    print "\end{tikzpicture}"


if __name__ == '__main__':
    # mat = loadmat('/media/Armazenamento/Dropbox/Doutorado/2015'
    #               '/artigoLVQ/resultados/calculo_pesos_corrigido/resultados'
    #               '.mat')
    #
    # datasets = ['sim21', 'sim22', 'sim32', 'cogumelos', 'climas', 'europeus',
    #             'secos']
    #
    # best = ['_06', '_08', '_02', '_00', '_10', '_05', '_02']

    b = 1000
    alpha = 0.05

    data = [
        [6.47619048, 8.57142857, 8.76190476, 8.38095238,
         5.33333333, 2.47619048, 7.80952381, 9.52380952,
         5.14285714, 0.38095238, 5.52380952, 4.38095238,
         4.19047619, 6.66666667, 8.95238095, 6.0952381,
         6.0952381, 3.61904762, 0., 6.28571429,
         3.61904762, 0., 6.47619048, 1.71428571,
         0., 9.52380952, 0.38095238, 5.9047619,
         0.38095238, 10.47619048, 0., 4.76190476,
         0.95238095, 17.14285714, 7.42857143, 0.,
         6.66666667, 9.14285714, 10.47619048, 14.0952381,
         6.0952381, 10.47619048, 11.23809524, 10.28571429,
         4.19047619, 0.19047619, 3.04761905, 21.33333333,
         0.19047619, 0.19047619, 2.85714286, 16.,
         10.66666667, 7.61904762, 17.33333333, 15.42857143,
         0., 8.95238095, 7.61904762, 4.38095238,
         13.14285714, 9.14285714, 0., 0.95238095,
         3.61904762, 4.95238095, 10.0952381, 6.66666667,
         4.95238095, 9.14285714, 10.85714286, 9.14285714,
         4.57142857, 5.14285714, 2.47619048, 15.61904762,
         0.19047619, 19.04761905, 12.76190476, 0.57142857,
         17.33333333, 5.71428571, 0.19047619, 0.19047619,
         6.85714286, 0., 1.14285714, 26.47619048,
         6.0952381, 0., 16.38095238, 10.85714286,
         8.76190476, 9.14285714, 3.23809524, 12.76190476,
         8.76190476, 0.38095238, 12.57142857, 0.19047619],

        [18.75, 10.227272727272728, 11.363636363636363, 32.38636363636363,
         11.363636363636363, 3.977272727272727, 30.113636363636363,
         15.340909090909092, 26.136363636363637, 25.0, 28.40909090909091,
         11.363636363636363, 16.477272727272727, 2.840909090909091,
         19.318181818181817, 9.659090909090908, 18.75, 18.75,
         20.454545454545457, 14.204545454545455, 36.36363636363637,
         23.295454545454543, 6.25, 2.840909090909091, 16.477272727272727,
         1.7045454545454544, 23.863636363636363, 13.068181818181818,
         28.97727272727273, 15.909090909090908, 19.886363636363637,
         22.727272727272727, 10.227272727272728, 27.84090909090909,
         22.15909090909091, 19.318181818181817, 10.227272727272728,
         26.704545454545453, 31.818181818181817, 11.931818181818182,
         14.772727272727273, 21.022727272727273, 23.295454545454543,
         17.613636363636363, 14.772727272727273, 10.795454545454545,
         6.8181818181818175, 25.568181818181817, 10.795454545454545,
         10.227272727272728, 23.863636363636363, 10.795454545454545,
         4.545454545454546, 9.659090909090908, 5.113636363636364,
         9.659090909090908, 24.431818181818183, 17.045454545454543,
         32.95454545454545, 13.636363636363635, 15.909090909090908,
         27.84090909090909, 18.75, 18.75, 4.545454545454546, 18.181818181818183,
         7.386363636363637, 15.340909090909092, 5.113636363636364,
         23.295454545454543, 2.840909090909091, 26.704545454545453,
         11.363636363636363, 15.909090909090908, 9.090909090909092,
         23.863636363636363, 25.568181818181817, 23.863636363636363,
         19.886363636363637, 13.068181818181818, 10.227272727272728,
         15.340909090909092, 17.045454545454543, 3.977272727272727,
         13.636363636363635, 11.363636363636363, 7.386363636363637,
         28.97727272727273, 4.545454545454546, 16.477272727272727,
         19.318181818181817, 15.909090909090908, 13.636363636363635,
         11.363636363636363, 21.59090909090909, 1.7045454545454544,
         21.59090909090909, 24.431818181818183, 26.704545454545453, 18.75],

        [5.33333333, 8., 14.0952381, 3.61904762,
         22.47619048, 19.23809524, 17.52380952, 14.47619048,
         24.76190476, 25.52380952, 12.76190476, 0.95238095,
         5.9047619, 24.57142857, 18.28571429, 15.23809524,
         3.80952381, 2.66666667, 8.95238095, 13.14285714,
         21.71428571, 14.28571429, 8.57142857, 10.28571429,
         24.19047619, 22.28571429, 11.80952381, 16.38095238,
         24., 6.28571429, 5.52380952, 10.28571429,
         3.04761905, 5.71428571, 3.42857143, 12.57142857,
         8.57142857, 6.28571429, 0.95238095, 7.04761905,
         3.23809524, 14.85714286, 12., 26.47619048,
         2.66666667, 19.80952381, 23.42857143, 11.42857143,
         8.95238095, 10.28571429, 16.57142857, 4.19047619,
         11.23809524, 17.14285714, 11.61904762, 24.57142857,
         23.80952381, 8.76190476, 17.33333333, 4.76190476,
         2.0952381, 24.38095238, 11.42857143, 12.57142857,
         2.47619048, 7.80952381, 4.95238095, 11.04761905,
         21.14285714, 1.71428571, 12., 15.61904762,
         6.0952381, 8.38095238, 25.71428571, 13.71428571,
         3.04761905, 2.85714286, 1.9047619, 17.14285714,
         12.38095238, 22.0952381, 26.66666667, 3.04761905,
         20., 14.28571429, 13.14285714, 15.04761905,
         6.28571429, 4.19047619, 25.33333333, 19.23809524,
         19.04761905, 22.66666667, 10.47619048, 2.66666667,
         19.80952381, 20.38095238, 5.52380952, 23.23809524],

        [5.71428571, 32.76190476, 16.19047619, 9.33333333,
         19.61904762, 19.61904762, 23.80952381, 20.76190476,
         20.19047619, 0.76190476, 13.71428571, 15.42857143,
         28.38095238, 17.14285714, 4.38095238, 20.,
         20.19047619, 18.28571429, 24.76190476, 26.85714286,
         7.04761905, 12.19047619, 21.33333333, 17.9047619,
         12.76190476, 8., 26.66666667, 21.33333333,
         10.66666667, 8.57142857, 15.61904762, 11.04761905,
         16.76190476, 10.66666667, 6.47619048, 16.,
         17.71428571, 15.61904762, 13.9047619, 17.33333333,
         16.19047619, 15.04761905, 8.76190476, 12.57142857,
         8.38095238, 6.85714286, 20.57142857, 9.14285714,
         25.71428571, 20.95238095, 3.04761905, 4.,
         18.47619048, 6.85714286, 14.85714286, 14.66666667,
         17.33333333, 14.47619048, 12.57142857, 12.95238095,
         21.71428571, 28.76190476, 9.14285714, 23.04761905,
         23.04761905, 21.52380952, 4.76190476, 20.95238095,
         20.57142857, 13.52380952, 4.95238095, 16.95238095,
         12.19047619, 8., 24.95238095, 7.61904762,
         7.23809524, 23.80952381, 26.66666667, 22.66666667,
         9.14285714, 25.52380952, 14.0952381, 13.71428571,
         18.28571429, 19.04761905, 14.47619048, 7.61904762,
         22.66666667, 14.66666667, 10.85714286, 5.14285714,
         12.57142857, 22.0952381, 18.66666667, 22.66666667,
         4.76190476, 16.95238095, 12.76190476, 24.],

        [6.47619048, 21.9047619, 11.42857143, 24.57142857,
         22.0952381, 10.47619048, 8.19047619, 16.19047619,
         12.38095238, 4., 9.14285714, 10.28571429,
         3.23809524, 17.9047619, 12.76190476, 20.,
         6.66666667, 7.04761905, 11.42857143, 13.14285714,
         27.23809524, 12.38095238, 1.52380952, 15.42857143,
         17.71428571, 15.80952381, 28.95238095, 15.42857143,
         23.80952381, 24.76190476, 16.57142857, 11.42857143,
         4.76190476, 17.71428571, 17.14285714, 10.47619048,
         15.80952381, 11.80952381, 24., 19.80952381,
         16.95238095, 1.71428571, 13.33333333, 16.19047619,
         30.0952381, 9.33333333, 22.66666667, 24.19047619,
         24.57142857, 12.76190476, 8.19047619, 8.19047619,
         8.95238095, 9.52380952, 10.28571429, 10.28571429,
         21.33333333, 18.85714286, 8.76190476, 8.19047619,
         14.85714286, 14.66666667, 13.33333333, 28.38095238,
         20., 10.47619048, 8.19047619, 6.47619048,
         26.0952381, 26.66666667, 23.80952381, 22.28571429,
         6.66666667, 16.19047619, 10.28571429, 27.42857143,
         27.42857143, 10.66666667, 19.80952381, 17.33333333,
         18.47619048, 10.85714286, 13.71428571, 22.66666667,
         9.9047619, 18.66666667, 18.28571429, 25.14285714,
         25.14285714, 20., 22.47619048, 29.52380952,
         12.76190476, 26.66666667, 13.71428571, 13.14285714,
         24.95238095, 8.38095238, 15.61904762, 24.]
    ]

    labels = ['IVABC', 'WFLVQ', 'VABC', 'IDPSO', 'PSO']
    print_intervals(data, labels, b, alpha=alpha)

    # for i, dataset in enumerate(datasets):
    #     print "####################### " + dataset + " ########################"
    #     # keys = [k for k in mat.keys() if dataset in k]
    #     # keys_ivabc = [k for k in keys if 'iVABC_' in k]
    #     # keys_ivabc.sort()
    #     keys = ['_iVABC', '_wflvq', '_vabc', '_idpso', '_pso']
    #     keys[0] += best[i]
    #     data = [mat[dataset + k][0] for k in keys]
    #     labels = ['IVABC', 'WFLVQ', 'VABC', 'IDPSO', 'PSO']
    #     print_intervals(data, labels, b, alpha=alpha)
